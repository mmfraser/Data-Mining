'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
'
Namespace Core
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CoreSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Core
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AuthenticateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogoutUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StartImpersonationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StopImpersonationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCurrentUserLevelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WindowsApplication1.My.MySettings.Default.HolidayImp_Core_Core
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AuthenticateUserCompleted As AuthenticateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event LogoutUserCompleted As LogoutUserCompletedEventHandler
        
        '''<remarks/>
        Public Event StartImpersonationCompleted As StartImpersonationCompletedEventHandler
        
        '''<remarks/>
        Public Event StopImpersonationCompleted As StopImpersonationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCurrentUserLevelCompleted As GetCurrentUserLevelCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AuthenticateUser(ByVal userName As String)
            Me.Invoke("AuthenticateUser", New Object() {userName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateUserAsync(ByVal userName As String)
            Me.AuthenticateUserAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateUserAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.AuthenticateUserOperationCompleted Is Nothing) Then
                Me.AuthenticateUserOperationCompleted = AddressOf Me.OnAuthenticateUserOperationCompleted
            End If
            Me.InvokeAsync("AuthenticateUser", New Object() {userName}, Me.AuthenticateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogoutUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LogoutUser(ByVal userName As String)
            Me.Invoke("LogoutUser", New Object() {userName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutUserAsync(ByVal userName As String)
            Me.LogoutUserAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutUserAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.LogoutUserOperationCompleted Is Nothing) Then
                Me.LogoutUserOperationCompleted = AddressOf Me.OnLogoutUserOperationCompleted
            End If
            Me.InvokeAsync("LogoutUser", New Object() {userName}, Me.LogoutUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogoutUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogoutUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogoutUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartImpersonation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub StartImpersonation(ByVal userToImpersonate As String)
            Me.Invoke("StartImpersonation", New Object() {userToImpersonate})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StartImpersonationAsync(ByVal userToImpersonate As String)
            Me.StartImpersonationAsync(userToImpersonate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StartImpersonationAsync(ByVal userToImpersonate As String, ByVal userState As Object)
            If (Me.StartImpersonationOperationCompleted Is Nothing) Then
                Me.StartImpersonationOperationCompleted = AddressOf Me.OnStartImpersonationOperationCompleted
            End If
            Me.InvokeAsync("StartImpersonation", New Object() {userToImpersonate}, Me.StartImpersonationOperationCompleted, userState)
        End Sub
        
        Private Sub OnStartImpersonationOperationCompleted(ByVal arg As Object)
            If (Not (Me.StartImpersonationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StartImpersonationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StopImpersonation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub StopImpersonation()
            Me.Invoke("StopImpersonation", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StopImpersonationAsync()
            Me.StopImpersonationAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StopImpersonationAsync(ByVal userState As Object)
            If (Me.StopImpersonationOperationCompleted Is Nothing) Then
                Me.StopImpersonationOperationCompleted = AddressOf Me.OnStopImpersonationOperationCompleted
            End If
            Me.InvokeAsync("StopImpersonation", New Object(-1) {}, Me.StopImpersonationOperationCompleted, userState)
        End Sub
        
        Private Sub OnStopImpersonationOperationCompleted(ByVal arg As Object)
            If (Not (Me.StopImpersonationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StopImpersonationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentUserLevel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentUserLevel(ByVal userName As String) As UserLevel
            Dim results() As Object = Me.Invoke("GetCurrentUserLevel", New Object() {userName})
            Return CType(results(0),UserLevel)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCurrentUserLevelAsync(ByVal userName As String)
            Me.GetCurrentUserLevelAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCurrentUserLevelAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.GetCurrentUserLevelOperationCompleted Is Nothing) Then
                Me.GetCurrentUserLevelOperationCompleted = AddressOf Me.OnGetCurrentUserLevelOperationCompleted
            End If
            Me.InvokeAsync("GetCurrentUserLevel", New Object() {userName}, Me.GetCurrentUserLevelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCurrentUserLevelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCurrentUserLevelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCurrentUserLevelCompleted(Me, New GetCurrentUserLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum UserLevel
        
        '''<remarks/>
        ADMIN
        
        '''<remarks/>
        PMO
        
        '''<remarks/>
        USER
        
        '''<remarks/>
        NON_USER
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AuthenticateUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub LogoutUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub StartImpersonationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub StopImpersonationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetCurrentUserLevelCompletedEventHandler(ByVal sender As Object, ByVal e As GetCurrentUserLevelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCurrentUserLevelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UserLevel
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UserLevel)
            End Get
        End Property
    End Class
End Namespace
