'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
'
Namespace User
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UserSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class User
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private UpdateUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MarkUserInactiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActiveUsersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WindowsApplication1.My.MySettings.Default.HolidayImp_User_User
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event UpdateUserCompleted As UpdateUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserByIDCompleted As GetUserByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserByNameCompleted As GetUserByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUsersCompleted As GetUsersCompletedEventHandler
        
        '''<remarks/>
        Public Event AddUserCompleted As AddUserCompletedEventHandler
        
        '''<remarks/>
        Public Event MarkUserInactiveCompleted As MarkUserInactiveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActiveUsersCompleted As GetActiveUsersCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateUser(ByVal newUserObj As User1)
            Me.Invoke("UpdateUser", New Object() {newUserObj})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal newUserObj As User1)
            Me.UpdateUserAsync(newUserObj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAsync(ByVal newUserObj As User1, ByVal userState As Object)
            If (Me.UpdateUserOperationCompleted Is Nothing) Then
                Me.UpdateUserOperationCompleted = AddressOf Me.OnUpdateUserOperationCompleted
            End If
            Me.InvokeAsync("UpdateUser", New Object() {newUserObj}, Me.UpdateUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserByID(ByVal userId As Integer) As User1
            Dim results() As Object = Me.Invoke("GetUserByID", New Object() {userId})
            Return CType(results(0),User1)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserByIDAsync(ByVal userId As Integer)
            Me.GetUserByIDAsync(userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserByIDAsync(ByVal userId As Integer, ByVal userState As Object)
            If (Me.GetUserByIDOperationCompleted Is Nothing) Then
                Me.GetUserByIDOperationCompleted = AddressOf Me.OnGetUserByIDOperationCompleted
            End If
            Me.InvokeAsync("GetUserByID", New Object() {userId}, Me.GetUserByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserByIDCompleted(Me, New GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserByName(ByVal userName As String) As User1
            Dim results() As Object = Me.Invoke("GetUserByName", New Object() {userName})
            Return CType(results(0),User1)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserByNameAsync(ByVal userName As String)
            Me.GetUserByNameAsync(userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserByNameAsync(ByVal userName As String, ByVal userState As Object)
            If (Me.GetUserByNameOperationCompleted Is Nothing) Then
                Me.GetUserByNameOperationCompleted = AddressOf Me.OnGetUserByNameOperationCompleted
            End If
            Me.InvokeAsync("GetUserByName", New Object() {userName}, Me.GetUserByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserByNameCompleted(Me, New GetUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUsers() As User1()
            Dim results() As Object = Me.Invoke("GetUsers", New Object(-1) {})
            Return CType(results(0),User1())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUsersAsync()
            Me.GetUsersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUsersAsync(ByVal userState As Object)
            If (Me.GetUsersOperationCompleted Is Nothing) Then
                Me.GetUsersOperationCompleted = AddressOf Me.OnGetUsersOperationCompleted
            End If
            Me.InvokeAsync("GetUsers", New Object(-1) {}, Me.GetUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUsersCompleted(Me, New GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddUser(ByVal userName As String, ByVal userEmail As String, ByVal isAdmin As Boolean, ByVal isPMO As Boolean, ByVal sendNagEmail As Boolean, ByVal defaultProject As Integer, ByVal isActive As Boolean, ByVal projectPlanName As String)
            Me.Invoke("AddUser", New Object() {userName, userEmail, isAdmin, isPMO, sendNagEmail, defaultProject, isActive, projectPlanName})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUserAsync(ByVal userName As String, ByVal userEmail As String, ByVal isAdmin As Boolean, ByVal isPMO As Boolean, ByVal sendNagEmail As Boolean, ByVal defaultProject As Integer, ByVal isActive As Boolean, ByVal projectPlanName As String)
            Me.AddUserAsync(userName, userEmail, isAdmin, isPMO, sendNagEmail, defaultProject, isActive, projectPlanName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUserAsync(ByVal userName As String, ByVal userEmail As String, ByVal isAdmin As Boolean, ByVal isPMO As Boolean, ByVal sendNagEmail As Boolean, ByVal defaultProject As Integer, ByVal isActive As Boolean, ByVal projectPlanName As String, ByVal userState As Object)
            If (Me.AddUserOperationCompleted Is Nothing) Then
                Me.AddUserOperationCompleted = AddressOf Me.OnAddUserOperationCompleted
            End If
            Me.InvokeAsync("AddUser", New Object() {userName, userEmail, isAdmin, isPMO, sendNagEmail, defaultProject, isActive, projectPlanName}, Me.AddUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MarkUserInactive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MarkUserInactive(ByVal userId As Integer)
            Me.Invoke("MarkUserInactive", New Object() {userId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MarkUserInactiveAsync(ByVal userId As Integer)
            Me.MarkUserInactiveAsync(userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MarkUserInactiveAsync(ByVal userId As Integer, ByVal userState As Object)
            If (Me.MarkUserInactiveOperationCompleted Is Nothing) Then
                Me.MarkUserInactiveOperationCompleted = AddressOf Me.OnMarkUserInactiveOperationCompleted
            End If
            Me.InvokeAsync("MarkUserInactive", New Object() {userId}, Me.MarkUserInactiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnMarkUserInactiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.MarkUserInactiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MarkUserInactiveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveUsers", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActiveUsers() As User1()
            Dim results() As Object = Me.Invoke("GetActiveUsers", New Object(-1) {})
            Return CType(results(0),User1())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActiveUsersAsync()
            Me.GetActiveUsersAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActiveUsersAsync(ByVal userState As Object)
            If (Me.GetActiveUsersOperationCompleted Is Nothing) Then
                Me.GetActiveUsersOperationCompleted = AddressOf Me.OnGetActiveUsersOperationCompleted
            End If
            Me.InvokeAsync("GetActiveUsers", New Object(-1) {}, Me.GetActiveUsersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActiveUsersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActiveUsersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActiveUsersCompleted(Me, New GetActiveUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(TypeName:="User", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class User1
        
        Private uSER_IDField As Integer
        
        Private uSER_NAMEField As String
        
        Private uSER_EMAILField As String
        
        Private sEND_NAG_EMAILField As Boolean
        
        Private iS_ADMINField As Boolean
        
        Private iS_PMOField As Boolean
        
        Private iS_ACTIVEField As Boolean
        
        Private pROJECT_PLAN_NAMEField As String
        
        '''<remarks/>
        Public Property USER_ID() As Integer
            Get
                Return Me.uSER_IDField
            End Get
            Set
                Me.uSER_IDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USER_NAME() As String
            Get
                Return Me.uSER_NAMEField
            End Get
            Set
                Me.uSER_NAMEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property USER_EMAIL() As String
            Get
                Return Me.uSER_EMAILField
            End Get
            Set
                Me.uSER_EMAILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SEND_NAG_EMAIL() As Boolean
            Get
                Return Me.sEND_NAG_EMAILField
            End Get
            Set
                Me.sEND_NAG_EMAILField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IS_ADMIN() As Boolean
            Get
                Return Me.iS_ADMINField
            End Get
            Set
                Me.iS_ADMINField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IS_PMO() As Boolean
            Get
                Return Me.iS_PMOField
            End Get
            Set
                Me.iS_PMOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IS_ACTIVE() As Boolean
            Get
                Return Me.iS_ACTIVEField
            End Get
            Set
                Me.iS_ACTIVEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PROJECT_PLAN_NAME() As String
            Get
                Return Me.pROJECT_PLAN_NAMEField
            End Get
            Set
                Me.pROJECT_PLAN_NAMEField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetUserByIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User1
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User1)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetUserByNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User1
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User1)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetUsersCompletedEventHandler(ByVal sender As Object, ByVal e As GetUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User1()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User1())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub MarkUserInactiveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetActiveUsersCompletedEventHandler(ByVal sender As Object, ByVal e As GetActiveUsersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActiveUsersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As User1()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),User1())
            End Get
        End Property
    End Class
End Namespace
